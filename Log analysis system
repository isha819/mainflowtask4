from collections import Counter

def parse_log_line(line):
    try:
        parts = line.split()
        ip = parts[0]
        url = parts[6]
        status_code = parts[8]
        return ip, url, status_code
    except IndexError:
        return None, None, None  # Handle malformed lines

def analyze_log(file_path):
    ip_counter = Counter()
    url_counter = Counter()
    code_counter = Counter()

    try:
        with open(file_path, 'r') as file:
            for line in file:
                ip, url, code = parse_log_line(line)
                if ip and url and code:
                    ip_counter[ip] += 1
                    url_counter[url] += 1
                    code_counter[code] += 1
    except FileNotFoundError:
        print("Log file not found.")
        return

    print("\n--- Log Analysis Report ---")
    
    print("\nTop 5 IP Addresses:")
    for ip, count in ip_counter.most_common(5):
        print(f"{ip} - {count} times")

    print("\nTop 5 URLs Accessed:")
    for url, count in url_counter.most_common(5):
        print(f"{url} - {count} times")

    print("\nResponse Code Summary:")
    for code, count in code_counter.items():
        print(f"{code} - {count} times")
        
file_path = input("Enter path to log file: ")
analyze_log(file_path)
